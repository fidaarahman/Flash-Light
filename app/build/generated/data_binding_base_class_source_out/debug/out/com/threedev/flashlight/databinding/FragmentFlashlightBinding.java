// Generated by view binder compiler. Do not edit!
package com.threedev.flashlight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.threedev.flashlight.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFlashlightBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout buttonContainer;

  @NonNull
  public final LinearLayout cameraButton;

  @NonNull
  public final ImageView ivOnLight;

  @NonNull
  public final LinearLayout modeButton;

  @NonNull
  public final LinearLayout screenButton;

  @NonNull
  public final LinearLayout shortcutButton;

  private FragmentFlashlightBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout buttonContainer, @NonNull LinearLayout cameraButton,
      @NonNull ImageView ivOnLight, @NonNull LinearLayout modeButton,
      @NonNull LinearLayout screenButton, @NonNull LinearLayout shortcutButton) {
    this.rootView = rootView;
    this.buttonContainer = buttonContainer;
    this.cameraButton = cameraButton;
    this.ivOnLight = ivOnLight;
    this.modeButton = modeButton;
    this.screenButton = screenButton;
    this.shortcutButton = shortcutButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFlashlightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFlashlightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_flashlight, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFlashlightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_container;
      ConstraintLayout buttonContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.camera_button;
      LinearLayout cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.iv_on_light;
      ImageView ivOnLight = ViewBindings.findChildViewById(rootView, id);
      if (ivOnLight == null) {
        break missingId;
      }

      id = R.id.mode_button;
      LinearLayout modeButton = ViewBindings.findChildViewById(rootView, id);
      if (modeButton == null) {
        break missingId;
      }

      id = R.id.screen_button;
      LinearLayout screenButton = ViewBindings.findChildViewById(rootView, id);
      if (screenButton == null) {
        break missingId;
      }

      id = R.id.shortcut_button;
      LinearLayout shortcutButton = ViewBindings.findChildViewById(rootView, id);
      if (shortcutButton == null) {
        break missingId;
      }

      return new FragmentFlashlightBinding((ConstraintLayout) rootView, buttonContainer,
          cameraButton, ivOnLight, modeButton, screenButton, shortcutButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
