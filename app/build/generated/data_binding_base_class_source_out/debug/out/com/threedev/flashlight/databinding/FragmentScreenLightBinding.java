// Generated by view binder compiler. Do not edit!
package com.threedev.flashlight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.threedev.flashlight.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentScreenLightBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View colorBlue;

  @NonNull
  public final View colorCyan;

  @NonNull
  public final View colorGreen;

  @NonNull
  public final View colorPink;

  @NonNull
  public final View colorPurple;

  @NonNull
  public final View colorRed;

  @NonNull
  public final View colorWhite;

  @NonNull
  public final View colorYellow;

  @NonNull
  public final View screenBackground;

  private FragmentScreenLightBinding(@NonNull ConstraintLayout rootView, @NonNull View colorBlue,
      @NonNull View colorCyan, @NonNull View colorGreen, @NonNull View colorPink,
      @NonNull View colorPurple, @NonNull View colorRed, @NonNull View colorWhite,
      @NonNull View colorYellow, @NonNull View screenBackground) {
    this.rootView = rootView;
    this.colorBlue = colorBlue;
    this.colorCyan = colorCyan;
    this.colorGreen = colorGreen;
    this.colorPink = colorPink;
    this.colorPurple = colorPurple;
    this.colorRed = colorRed;
    this.colorWhite = colorWhite;
    this.colorYellow = colorYellow;
    this.screenBackground = screenBackground;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentScreenLightBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentScreenLightBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_screen_light, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentScreenLightBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.colorBlue;
      View colorBlue = ViewBindings.findChildViewById(rootView, id);
      if (colorBlue == null) {
        break missingId;
      }

      id = R.id.colorCyan;
      View colorCyan = ViewBindings.findChildViewById(rootView, id);
      if (colorCyan == null) {
        break missingId;
      }

      id = R.id.colorGreen;
      View colorGreen = ViewBindings.findChildViewById(rootView, id);
      if (colorGreen == null) {
        break missingId;
      }

      id = R.id.colorPink;
      View colorPink = ViewBindings.findChildViewById(rootView, id);
      if (colorPink == null) {
        break missingId;
      }

      id = R.id.colorPurple;
      View colorPurple = ViewBindings.findChildViewById(rootView, id);
      if (colorPurple == null) {
        break missingId;
      }

      id = R.id.colorRed;
      View colorRed = ViewBindings.findChildViewById(rootView, id);
      if (colorRed == null) {
        break missingId;
      }

      id = R.id.colorWhite;
      View colorWhite = ViewBindings.findChildViewById(rootView, id);
      if (colorWhite == null) {
        break missingId;
      }

      id = R.id.colorYellow;
      View colorYellow = ViewBindings.findChildViewById(rootView, id);
      if (colorYellow == null) {
        break missingId;
      }

      id = R.id.screenBackground;
      View screenBackground = ViewBindings.findChildViewById(rootView, id);
      if (screenBackground == null) {
        break missingId;
      }

      return new FragmentScreenLightBinding((ConstraintLayout) rootView, colorBlue, colorCyan,
          colorGreen, colorPink, colorPurple, colorRed, colorWhite, colorYellow, screenBackground);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
